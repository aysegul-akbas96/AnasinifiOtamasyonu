#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AnaSınıfıProjesi__16Nisan2019
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AnaSınıfı")]
	public partial class AnaSınıfıDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBirim(Birim instance);
    partial void UpdateBirim(Birim instance);
    partial void DeleteBirim(Birim instance);
    partial void InsertÇocuk(Çocuk instance);
    partial void UpdateÇocuk(Çocuk instance);
    partial void DeleteÇocuk(Çocuk instance);
    partial void InsertGörevlendirme(Görevlendirme instance);
    partial void UpdateGörevlendirme(Görevlendirme instance);
    partial void DeleteGörevlendirme(Görevlendirme instance);
    partial void InsertHocalar(Hocalar instance);
    partial void UpdateHocalar(Hocalar instance);
    partial void DeleteHocalar(Hocalar instance);
    partial void InsertÖdeme(Ödeme instance);
    partial void UpdateÖdeme(Ödeme instance);
    partial void DeleteÖdeme(Ödeme instance);
    partial void InsertProje(Proje instance);
    partial void UpdateProje(Proje instance);
    partial void DeleteProje(Proje instance);
    partial void InsertRehberlik(Rehberlik instance);
    partial void UpdateRehberlik(Rehberlik instance);
    partial void DeleteRehberlik(Rehberlik instance);
    partial void InsertŞube(Şube instance);
    partial void UpdateŞube(Şube instance);
    partial void DeleteŞube(Şube instance);
    partial void InsertVeli(Veli instance);
    partial void UpdateVeli(Veli instance);
    partial void DeleteVeli(Veli instance);
    #endregion
		
		public AnaSınıfıDataContext() : 
				base(global::AnaSınıfıProjesi__16Nisan2019.Properties.Settings.Default.AnaSınıfıConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AnaSınıfıDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaSınıfıDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaSınıfıDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaSınıfıDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Birim> Birims
		{
			get
			{
				return this.GetTable<Birim>();
			}
		}
		
		public System.Data.Linq.Table<Çocuk> Çocuks
		{
			get
			{
				return this.GetTable<Çocuk>();
			}
		}
		
		public System.Data.Linq.Table<Görevlendirme> Görevlendirmes
		{
			get
			{
				return this.GetTable<Görevlendirme>();
			}
		}
		
		public System.Data.Linq.Table<Hocalar> Hocalars
		{
			get
			{
				return this.GetTable<Hocalar>();
			}
		}
		
		public System.Data.Linq.Table<Ödeme> Ödemes
		{
			get
			{
				return this.GetTable<Ödeme>();
			}
		}
		
		public System.Data.Linq.Table<Proje> Projes
		{
			get
			{
				return this.GetTable<Proje>();
			}
		}
		
		public System.Data.Linq.Table<Rehberlik> Rehberliks
		{
			get
			{
				return this.GetTable<Rehberlik>();
			}
		}
		
		public System.Data.Linq.Table<Şube> Şubes
		{
			get
			{
				return this.GetTable<Şube>();
			}
		}
		
		public System.Data.Linq.Table<Veli> Velis
		{
			get
			{
				return this.GetTable<Veli>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Birim")]
	public partial class Birim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BirimID;
		
		private string _BirimAdı;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Şube> _Şubes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBirimIDChanging(int value);
    partial void OnBirimIDChanged();
    partial void OnBirimAdıChanging(string value);
    partial void OnBirimAdıChanged();
    #endregion
		
		public Birim()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Şubes = new EntitySet<Şube>(new Action<Şube>(this.attach_Şubes), new Action<Şube>(this.detach_Şubes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BirimID
		{
			get
			{
				return this._BirimID;
			}
			set
			{
				if ((this._BirimID != value))
				{
					this.OnBirimIDChanging(value);
					this.SendPropertyChanging();
					this._BirimID = value;
					this.SendPropertyChanged("BirimID");
					this.OnBirimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimAdı", DbType="VarChar(50)")]
		public string BirimAdı
		{
			get
			{
				return this._BirimAdı;
			}
			set
			{
				if ((this._BirimAdı != value))
				{
					this.OnBirimAdıChanging(value);
					this.SendPropertyChanging();
					this._BirimAdı = value;
					this.SendPropertyChanged("BirimAdı");
					this.OnBirimAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birim_Hocalar", Storage="_Hocalars", ThisKey="BirimID", OtherKey="BirimID")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birim_Şube", Storage="_Şubes", ThisKey="BirimID", OtherKey="BirimID")]
		public EntitySet<Şube> Şubes
		{
			get
			{
				return this._Şubes;
			}
			set
			{
				this._Şubes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Birim = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Birim = null;
		}
		
		private void attach_Şubes(Şube entity)
		{
			this.SendPropertyChanging();
			entity.Birim = this;
		}
		
		private void detach_Şubes(Şube entity)
		{
			this.SendPropertyChanging();
			entity.Birim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Çocuk")]
	public partial class Çocuk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ÇocukID;
		
		private System.Nullable<int> _TC;
		
		private string _Adı;
		
		private string _Soyadı;
		
		private System.Nullable<int> _Yaş;
		
		private string _Cinsiyet;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Ödeme> _Ödemes;
		
		private EntitySet<Proje> _Projes;
		
		private EntitySet<Rehberlik> _Rehberliks;
		
		private EntitySet<Şube> _Şubes;
		
		private EntitySet<Veli> _Velis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnÇocukIDChanging(int value);
    partial void OnÇocukIDChanged();
    partial void OnTCChanging(System.Nullable<int> value);
    partial void OnTCChanged();
    partial void OnAdıChanging(string value);
    partial void OnAdıChanged();
    partial void OnSoyadıChanging(string value);
    partial void OnSoyadıChanged();
    partial void OnYaşChanging(System.Nullable<int> value);
    partial void OnYaşChanged();
    partial void OnCinsiyetChanging(string value);
    partial void OnCinsiyetChanged();
    #endregion
		
		public Çocuk()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Ödemes = new EntitySet<Ödeme>(new Action<Ödeme>(this.attach_Ödemes), new Action<Ödeme>(this.detach_Ödemes));
			this._Projes = new EntitySet<Proje>(new Action<Proje>(this.attach_Projes), new Action<Proje>(this.detach_Projes));
			this._Rehberliks = new EntitySet<Rehberlik>(new Action<Rehberlik>(this.attach_Rehberliks), new Action<Rehberlik>(this.detach_Rehberliks));
			this._Şubes = new EntitySet<Şube>(new Action<Şube>(this.attach_Şubes), new Action<Şube>(this.detach_Şubes));
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TC", DbType="Int")]
		public System.Nullable<int> TC
		{
			get
			{
				return this._TC;
			}
			set
			{
				if ((this._TC != value))
				{
					this.OnTCChanging(value);
					this.SendPropertyChanging();
					this._TC = value;
					this.SendPropertyChanged("TC");
					this.OnTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adı", DbType="VarChar(50)")]
		public string Adı
		{
			get
			{
				return this._Adı;
			}
			set
			{
				if ((this._Adı != value))
				{
					this.OnAdıChanging(value);
					this.SendPropertyChanging();
					this._Adı = value;
					this.SendPropertyChanged("Adı");
					this.OnAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Soyadı", DbType="VarChar(50)")]
		public string Soyadı
		{
			get
			{
				return this._Soyadı;
			}
			set
			{
				if ((this._Soyadı != value))
				{
					this.OnSoyadıChanging(value);
					this.SendPropertyChanging();
					this._Soyadı = value;
					this.SendPropertyChanged("Soyadı");
					this.OnSoyadıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Yaş", DbType="Int")]
		public System.Nullable<int> Yaş
		{
			get
			{
				return this._Yaş;
			}
			set
			{
				if ((this._Yaş != value))
				{
					this.OnYaşChanging(value);
					this.SendPropertyChanging();
					this._Yaş = value;
					this.SendPropertyChanged("Yaş");
					this.OnYaşChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cinsiyet", DbType="VarChar(50)")]
		public string Cinsiyet
		{
			get
			{
				return this._Cinsiyet;
			}
			set
			{
				if ((this._Cinsiyet != value))
				{
					this.OnCinsiyetChanging(value);
					this.SendPropertyChanging();
					this._Cinsiyet = value;
					this.SendPropertyChanged("Cinsiyet");
					this.OnCinsiyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Hocalar", Storage="_Hocalars", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Ödeme", Storage="_Ödemes", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Ödeme> Ödemes
		{
			get
			{
				return this._Ödemes;
			}
			set
			{
				this._Ödemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Proje", Storage="_Projes", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Proje> Projes
		{
			get
			{
				return this._Projes;
			}
			set
			{
				this._Projes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Rehberlik", Storage="_Rehberliks", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Rehberlik> Rehberliks
		{
			get
			{
				return this._Rehberliks;
			}
			set
			{
				this._Rehberliks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Şube", Storage="_Şubes", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Şube> Şubes
		{
			get
			{
				return this._Şubes;
			}
			set
			{
				this._Şubes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Veli", Storage="_Velis", ThisKey="ÇocukID", OtherKey="ÇocukID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
		
		private void attach_Ödemes(Ödeme entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Ödemes(Ödeme entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
		
		private void attach_Projes(Proje entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Projes(Proje entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
		
		private void attach_Rehberliks(Rehberlik entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Rehberliks(Rehberlik entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
		
		private void attach_Şubes(Şube entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Şubes(Şube entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Çocuk = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Görevlendirme")]
	public partial class Görevlendirme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GörevID;
		
		private string _GörevAdı;
		
		private string _GörevYeri;
		
		private EntitySet<Hocalar> _Hocalars;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGörevIDChanging(int value);
    partial void OnGörevIDChanged();
    partial void OnGörevAdıChanging(string value);
    partial void OnGörevAdıChanged();
    partial void OnGörevYeriChanging(string value);
    partial void OnGörevYeriChanged();
    #endregion
		
		public Görevlendirme()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GörevID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GörevID
		{
			get
			{
				return this._GörevID;
			}
			set
			{
				if ((this._GörevID != value))
				{
					this.OnGörevIDChanging(value);
					this.SendPropertyChanging();
					this._GörevID = value;
					this.SendPropertyChanged("GörevID");
					this.OnGörevIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GörevAdı", DbType="VarChar(50)")]
		public string GörevAdı
		{
			get
			{
				return this._GörevAdı;
			}
			set
			{
				if ((this._GörevAdı != value))
				{
					this.OnGörevAdıChanging(value);
					this.SendPropertyChanging();
					this._GörevAdı = value;
					this.SendPropertyChanged("GörevAdı");
					this.OnGörevAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GörevYeri", DbType="VarChar(50)")]
		public string GörevYeri
		{
			get
			{
				return this._GörevYeri;
			}
			set
			{
				if ((this._GörevYeri != value))
				{
					this.OnGörevYeriChanging(value);
					this.SendPropertyChanging();
					this._GörevYeri = value;
					this.SendPropertyChanged("GörevYeri");
					this.OnGörevYeriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Görevlendirme_Hocalar", Storage="_Hocalars", ThisKey="GörevID", OtherKey="GörevID")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Görevlendirme = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Görevlendirme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hocalar")]
	public partial class Hocalar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HocaID;
		
		private string _HocaAdıSoyadı;
		
		private System.Nullable<int> _ÇocukID;
		
		private System.Nullable<int> _BirimID;
		
		private System.Nullable<int> _GörevID;
		
		private System.Nullable<int> _ŞubeID;
		
		private System.Nullable<int> _ProjeID;
		
		private EntityRef<Birim> _Birim;
		
		private EntityRef<Çocuk> _Çocuk;
		
		private EntityRef<Görevlendirme> _Görevlendirme;
		
		private EntityRef<Proje> _Proje;
		
		private EntityRef<Şube> _Şube;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHocaIDChanging(int value);
    partial void OnHocaIDChanged();
    partial void OnHocaAdıSoyadıChanging(string value);
    partial void OnHocaAdıSoyadıChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    partial void OnBirimIDChanging(System.Nullable<int> value);
    partial void OnBirimIDChanged();
    partial void OnGörevIDChanging(System.Nullable<int> value);
    partial void OnGörevIDChanged();
    partial void OnŞubeIDChanging(System.Nullable<int> value);
    partial void OnŞubeIDChanged();
    partial void OnProjeIDChanging(System.Nullable<int> value);
    partial void OnProjeIDChanged();
    #endregion
		
		public Hocalar()
		{
			this._Birim = default(EntityRef<Birim>);
			this._Çocuk = default(EntityRef<Çocuk>);
			this._Görevlendirme = default(EntityRef<Görevlendirme>);
			this._Proje = default(EntityRef<Proje>);
			this._Şube = default(EntityRef<Şube>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HocaID
		{
			get
			{
				return this._HocaID;
			}
			set
			{
				if ((this._HocaID != value))
				{
					this.OnHocaIDChanging(value);
					this.SendPropertyChanging();
					this._HocaID = value;
					this.SendPropertyChanged("HocaID");
					this.OnHocaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HocaAdıSoyadı", DbType="VarChar(50)")]
		public string HocaAdıSoyadı
		{
			get
			{
				return this._HocaAdıSoyadı;
			}
			set
			{
				if ((this._HocaAdıSoyadı != value))
				{
					this.OnHocaAdıSoyadıChanging(value);
					this.SendPropertyChanging();
					this._HocaAdıSoyadı = value;
					this.SendPropertyChanged("HocaAdıSoyadı");
					this.OnHocaAdıSoyadıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimID", DbType="Int")]
		public System.Nullable<int> BirimID
		{
			get
			{
				return this._BirimID;
			}
			set
			{
				if ((this._BirimID != value))
				{
					if (this._Birim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBirimIDChanging(value);
					this.SendPropertyChanging();
					this._BirimID = value;
					this.SendPropertyChanged("BirimID");
					this.OnBirimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GörevID", DbType="Int")]
		public System.Nullable<int> GörevID
		{
			get
			{
				return this._GörevID;
			}
			set
			{
				if ((this._GörevID != value))
				{
					if (this._Görevlendirme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGörevIDChanging(value);
					this.SendPropertyChanging();
					this._GörevID = value;
					this.SendPropertyChanged("GörevID");
					this.OnGörevIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ŞubeID", DbType="Int")]
		public System.Nullable<int> ŞubeID
		{
			get
			{
				return this._ŞubeID;
			}
			set
			{
				if ((this._ŞubeID != value))
				{
					if (this._Şube.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnŞubeIDChanging(value);
					this.SendPropertyChanging();
					this._ŞubeID = value;
					this.SendPropertyChanged("ŞubeID");
					this.OnŞubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeID", DbType="Int")]
		public System.Nullable<int> ProjeID
		{
			get
			{
				return this._ProjeID;
			}
			set
			{
				if ((this._ProjeID != value))
				{
					if (this._Proje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjeIDChanging(value);
					this.SendPropertyChanging();
					this._ProjeID = value;
					this.SendPropertyChanged("ProjeID");
					this.OnProjeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birim_Hocalar", Storage="_Birim", ThisKey="BirimID", OtherKey="BirimID", IsForeignKey=true)]
		public Birim Birim
		{
			get
			{
				return this._Birim.Entity;
			}
			set
			{
				Birim previousValue = this._Birim.Entity;
				if (((previousValue != value) 
							|| (this._Birim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Birim.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Birim.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._BirimID = value.BirimID;
					}
					else
					{
						this._BirimID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Birim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Hocalar", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Görevlendirme_Hocalar", Storage="_Görevlendirme", ThisKey="GörevID", OtherKey="GörevID", IsForeignKey=true)]
		public Görevlendirme Görevlendirme
		{
			get
			{
				return this._Görevlendirme.Entity;
			}
			set
			{
				Görevlendirme previousValue = this._Görevlendirme.Entity;
				if (((previousValue != value) 
							|| (this._Görevlendirme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Görevlendirme.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Görevlendirme.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._GörevID = value.GörevID;
					}
					else
					{
						this._GörevID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Görevlendirme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proje_Hocalar", Storage="_Proje", ThisKey="ProjeID", OtherKey="ProjeID", IsForeignKey=true)]
		public Proje Proje
		{
			get
			{
				return this._Proje.Entity;
			}
			set
			{
				Proje previousValue = this._Proje.Entity;
				if (((previousValue != value) 
							|| (this._Proje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proje.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Proje.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._ProjeID = value.ProjeID;
					}
					else
					{
						this._ProjeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proje");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Şube_Hocalar", Storage="_Şube", ThisKey="ŞubeID", OtherKey="ŞubeID", IsForeignKey=true)]
		public Şube Şube
		{
			get
			{
				return this._Şube.Entity;
			}
			set
			{
				Şube previousValue = this._Şube.Entity;
				if (((previousValue != value) 
							|| (this._Şube.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Şube.Entity = null;
						previousValue.Hocalars.Remove(this);
					}
					this._Şube.Entity = value;
					if ((value != null))
					{
						value.Hocalars.Add(this);
						this._ŞubeID = value.ŞubeID;
					}
					else
					{
						this._ŞubeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Şube");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ödeme")]
	public partial class Ödeme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ÖdemeID;
		
		private string _ÖdemeTipi;
		
		private string _GeçerlilikDurumu;
		
		private System.Nullable<decimal> _Tutar;
		
		private System.Nullable<int> _ÇocukID;
		
		private EntitySet<Veli> _Velis;
		
		private EntityRef<Çocuk> _Çocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnÖdemeIDChanging(int value);
    partial void OnÖdemeIDChanged();
    partial void OnÖdemeTipiChanging(string value);
    partial void OnÖdemeTipiChanged();
    partial void OnGeçerlilikDurumuChanging(string value);
    partial void OnGeçerlilikDurumuChanged();
    partial void OnTutarChanging(System.Nullable<decimal> value);
    partial void OnTutarChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    #endregion
		
		public Ödeme()
		{
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			this._Çocuk = default(EntityRef<Çocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÖdemeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ÖdemeID
		{
			get
			{
				return this._ÖdemeID;
			}
			set
			{
				if ((this._ÖdemeID != value))
				{
					this.OnÖdemeIDChanging(value);
					this.SendPropertyChanging();
					this._ÖdemeID = value;
					this.SendPropertyChanged("ÖdemeID");
					this.OnÖdemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÖdemeTipi", DbType="VarChar(50)")]
		public string ÖdemeTipi
		{
			get
			{
				return this._ÖdemeTipi;
			}
			set
			{
				if ((this._ÖdemeTipi != value))
				{
					this.OnÖdemeTipiChanging(value);
					this.SendPropertyChanging();
					this._ÖdemeTipi = value;
					this.SendPropertyChanged("ÖdemeTipi");
					this.OnÖdemeTipiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeçerlilikDurumu", DbType="VarChar(50)")]
		public string GeçerlilikDurumu
		{
			get
			{
				return this._GeçerlilikDurumu;
			}
			set
			{
				if ((this._GeçerlilikDurumu != value))
				{
					this.OnGeçerlilikDurumuChanging(value);
					this.SendPropertyChanging();
					this._GeçerlilikDurumu = value;
					this.SendPropertyChanged("GeçerlilikDurumu");
					this.OnGeçerlilikDurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tutar", DbType="Money")]
		public System.Nullable<decimal> Tutar
		{
			get
			{
				return this._Tutar;
			}
			set
			{
				if ((this._Tutar != value))
				{
					this.OnTutarChanging(value);
					this.SendPropertyChanging();
					this._Tutar = value;
					this.SendPropertyChanged("Tutar");
					this.OnTutarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ödeme_Veli", Storage="_Velis", ThisKey="ÖdemeID", OtherKey="ÖdemeID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Ödeme", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Ödemes.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Ödemes.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Ödeme = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Ödeme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proje")]
	public partial class Proje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProjeID;
		
		private string _ProjeAdı;
		
		private string _KatıldığıŞehir;
		
		private string _ProjeKonusu;
		
		private System.Nullable<int> _ÇocukID;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Veli> _Velis;
		
		private EntityRef<Çocuk> _Çocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProjeIDChanging(int value);
    partial void OnProjeIDChanged();
    partial void OnProjeAdıChanging(string value);
    partial void OnProjeAdıChanged();
    partial void OnKatıldığıŞehirChanging(string value);
    partial void OnKatıldığıŞehirChanged();
    partial void OnProjeKonusuChanging(string value);
    partial void OnProjeKonusuChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    #endregion
		
		public Proje()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			this._Çocuk = default(EntityRef<Çocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProjeID
		{
			get
			{
				return this._ProjeID;
			}
			set
			{
				if ((this._ProjeID != value))
				{
					this.OnProjeIDChanging(value);
					this.SendPropertyChanging();
					this._ProjeID = value;
					this.SendPropertyChanged("ProjeID");
					this.OnProjeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeAdı", DbType="VarChar(50)")]
		public string ProjeAdı
		{
			get
			{
				return this._ProjeAdı;
			}
			set
			{
				if ((this._ProjeAdı != value))
				{
					this.OnProjeAdıChanging(value);
					this.SendPropertyChanging();
					this._ProjeAdı = value;
					this.SendPropertyChanged("ProjeAdı");
					this.OnProjeAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KatıldığıŞehir", DbType="VarChar(50)")]
		public string KatıldığıŞehir
		{
			get
			{
				return this._KatıldığıŞehir;
			}
			set
			{
				if ((this._KatıldığıŞehir != value))
				{
					this.OnKatıldığıŞehirChanging(value);
					this.SendPropertyChanging();
					this._KatıldığıŞehir = value;
					this.SendPropertyChanged("KatıldığıŞehir");
					this.OnKatıldığıŞehirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeKonusu", DbType="VarChar(50)")]
		public string ProjeKonusu
		{
			get
			{
				return this._ProjeKonusu;
			}
			set
			{
				if ((this._ProjeKonusu != value))
				{
					this.OnProjeKonusuChanging(value);
					this.SendPropertyChanging();
					this._ProjeKonusu = value;
					this.SendPropertyChanged("ProjeKonusu");
					this.OnProjeKonusuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proje_Hocalar", Storage="_Hocalars", ThisKey="ProjeID", OtherKey="ProjeID")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proje_Veli", Storage="_Velis", ThisKey="ProjeID", OtherKey="ProjeID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Proje", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Projes.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Projes.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Proje = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Proje = null;
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Proje = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Proje = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rehberlik")]
	public partial class Rehberlik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RehberlikID;
		
		private string _RehberlikDurumu;
		
		private string _Tespit;
		
		private string _Açıklama;
		
		private System.Nullable<int> _ÇocukID;
		
		private EntitySet<Veli> _Velis;
		
		private EntityRef<Çocuk> _Çocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRehberlikIDChanging(int value);
    partial void OnRehberlikIDChanged();
    partial void OnRehberlikDurumuChanging(string value);
    partial void OnRehberlikDurumuChanged();
    partial void OnTespitChanging(string value);
    partial void OnTespitChanged();
    partial void OnAçıklamaChanging(string value);
    partial void OnAçıklamaChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    #endregion
		
		public Rehberlik()
		{
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			this._Çocuk = default(EntityRef<Çocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RehberlikID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RehberlikID
		{
			get
			{
				return this._RehberlikID;
			}
			set
			{
				if ((this._RehberlikID != value))
				{
					this.OnRehberlikIDChanging(value);
					this.SendPropertyChanging();
					this._RehberlikID = value;
					this.SendPropertyChanged("RehberlikID");
					this.OnRehberlikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RehberlikDurumu", DbType="VarChar(50)")]
		public string RehberlikDurumu
		{
			get
			{
				return this._RehberlikDurumu;
			}
			set
			{
				if ((this._RehberlikDurumu != value))
				{
					this.OnRehberlikDurumuChanging(value);
					this.SendPropertyChanging();
					this._RehberlikDurumu = value;
					this.SendPropertyChanged("RehberlikDurumu");
					this.OnRehberlikDurumuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tespit", DbType="VarChar(50)")]
		public string Tespit
		{
			get
			{
				return this._Tespit;
			}
			set
			{
				if ((this._Tespit != value))
				{
					this.OnTespitChanging(value);
					this.SendPropertyChanging();
					this._Tespit = value;
					this.SendPropertyChanged("Tespit");
					this.OnTespitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Açıklama", DbType="VarChar(50)")]
		public string Açıklama
		{
			get
			{
				return this._Açıklama;
			}
			set
			{
				if ((this._Açıklama != value))
				{
					this.OnAçıklamaChanging(value);
					this.SendPropertyChanging();
					this._Açıklama = value;
					this.SendPropertyChanged("Açıklama");
					this.OnAçıklamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rehberlik_Veli", Storage="_Velis", ThisKey="RehberlikID", OtherKey="RehberlikID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Rehberlik", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Rehberliks.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Rehberliks.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Rehberlik = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Rehberlik = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Şube")]
	public partial class Şube : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ŞubeID;
		
		private string _ŞubeAdı;
		
		private System.Nullable<int> _BirimID;
		
		private System.Nullable<int> _ÇocukID;
		
		private EntitySet<Hocalar> _Hocalars;
		
		private EntitySet<Veli> _Velis;
		
		private EntityRef<Birim> _Birim;
		
		private EntityRef<Çocuk> _Çocuk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnŞubeIDChanging(int value);
    partial void OnŞubeIDChanged();
    partial void OnŞubeAdıChanging(string value);
    partial void OnŞubeAdıChanged();
    partial void OnBirimIDChanging(System.Nullable<int> value);
    partial void OnBirimIDChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    #endregion
		
		public Şube()
		{
			this._Hocalars = new EntitySet<Hocalar>(new Action<Hocalar>(this.attach_Hocalars), new Action<Hocalar>(this.detach_Hocalars));
			this._Velis = new EntitySet<Veli>(new Action<Veli>(this.attach_Velis), new Action<Veli>(this.detach_Velis));
			this._Birim = default(EntityRef<Birim>);
			this._Çocuk = default(EntityRef<Çocuk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ŞubeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ŞubeID
		{
			get
			{
				return this._ŞubeID;
			}
			set
			{
				if ((this._ŞubeID != value))
				{
					this.OnŞubeIDChanging(value);
					this.SendPropertyChanging();
					this._ŞubeID = value;
					this.SendPropertyChanged("ŞubeID");
					this.OnŞubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ŞubeAdı", DbType="VarChar(50)")]
		public string ŞubeAdı
		{
			get
			{
				return this._ŞubeAdı;
			}
			set
			{
				if ((this._ŞubeAdı != value))
				{
					this.OnŞubeAdıChanging(value);
					this.SendPropertyChanging();
					this._ŞubeAdı = value;
					this.SendPropertyChanged("ŞubeAdı");
					this.OnŞubeAdıChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirimID", DbType="Int")]
		public System.Nullable<int> BirimID
		{
			get
			{
				return this._BirimID;
			}
			set
			{
				if ((this._BirimID != value))
				{
					if (this._Birim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBirimIDChanging(value);
					this.SendPropertyChanging();
					this._BirimID = value;
					this.SendPropertyChanged("BirimID");
					this.OnBirimIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Şube_Hocalar", Storage="_Hocalars", ThisKey="ŞubeID", OtherKey="ŞubeID")]
		public EntitySet<Hocalar> Hocalars
		{
			get
			{
				return this._Hocalars;
			}
			set
			{
				this._Hocalars.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Şube_Veli", Storage="_Velis", ThisKey="ŞubeID", OtherKey="ŞubeID")]
		public EntitySet<Veli> Velis
		{
			get
			{
				return this._Velis;
			}
			set
			{
				this._Velis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Birim_Şube", Storage="_Birim", ThisKey="BirimID", OtherKey="BirimID", IsForeignKey=true)]
		public Birim Birim
		{
			get
			{
				return this._Birim.Entity;
			}
			set
			{
				Birim previousValue = this._Birim.Entity;
				if (((previousValue != value) 
							|| (this._Birim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Birim.Entity = null;
						previousValue.Şubes.Remove(this);
					}
					this._Birim.Entity = value;
					if ((value != null))
					{
						value.Şubes.Add(this);
						this._BirimID = value.BirimID;
					}
					else
					{
						this._BirimID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Birim");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Şube", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Şubes.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Şubes.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Şube = this;
		}
		
		private void detach_Hocalars(Hocalar entity)
		{
			this.SendPropertyChanging();
			entity.Şube = null;
		}
		
		private void attach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Şube = this;
		}
		
		private void detach_Velis(Veli entity)
		{
			this.SendPropertyChanging();
			entity.Şube = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Veli")]
	public partial class Veli : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VeliID;
		
		private System.Nullable<int> _ÇocukID;
		
		private System.Nullable<int> _ÖdemeID;
		
		private System.Nullable<int> _ProjeID;
		
		private System.Nullable<int> _ŞubeID;
		
		private System.Nullable<int> _RehberlikID;
		
		private EntityRef<Çocuk> _Çocuk;
		
		private EntityRef<Ödeme> _Ödeme;
		
		private EntityRef<Proje> _Proje;
		
		private EntityRef<Rehberlik> _Rehberlik;
		
		private EntityRef<Şube> _Şube;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeliIDChanging(int value);
    partial void OnVeliIDChanged();
    partial void OnÇocukIDChanging(System.Nullable<int> value);
    partial void OnÇocukIDChanged();
    partial void OnÖdemeIDChanging(System.Nullable<int> value);
    partial void OnÖdemeIDChanged();
    partial void OnProjeIDChanging(System.Nullable<int> value);
    partial void OnProjeIDChanged();
    partial void OnŞubeIDChanging(System.Nullable<int> value);
    partial void OnŞubeIDChanged();
    partial void OnRehberlikIDChanging(System.Nullable<int> value);
    partial void OnRehberlikIDChanged();
    #endregion
		
		public Veli()
		{
			this._Çocuk = default(EntityRef<Çocuk>);
			this._Ödeme = default(EntityRef<Ödeme>);
			this._Proje = default(EntityRef<Proje>);
			this._Rehberlik = default(EntityRef<Rehberlik>);
			this._Şube = default(EntityRef<Şube>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeliID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VeliID
		{
			get
			{
				return this._VeliID;
			}
			set
			{
				if ((this._VeliID != value))
				{
					this.OnVeliIDChanging(value);
					this.SendPropertyChanging();
					this._VeliID = value;
					this.SendPropertyChanged("VeliID");
					this.OnVeliIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÇocukID", DbType="Int")]
		public System.Nullable<int> ÇocukID
		{
			get
			{
				return this._ÇocukID;
			}
			set
			{
				if ((this._ÇocukID != value))
				{
					if (this._Çocuk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÇocukIDChanging(value);
					this.SendPropertyChanging();
					this._ÇocukID = value;
					this.SendPropertyChanged("ÇocukID");
					this.OnÇocukIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ÖdemeID", DbType="Int")]
		public System.Nullable<int> ÖdemeID
		{
			get
			{
				return this._ÖdemeID;
			}
			set
			{
				if ((this._ÖdemeID != value))
				{
					if (this._Ödeme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnÖdemeIDChanging(value);
					this.SendPropertyChanging();
					this._ÖdemeID = value;
					this.SendPropertyChanged("ÖdemeID");
					this.OnÖdemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjeID", DbType="Int")]
		public System.Nullable<int> ProjeID
		{
			get
			{
				return this._ProjeID;
			}
			set
			{
				if ((this._ProjeID != value))
				{
					if (this._Proje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjeIDChanging(value);
					this.SendPropertyChanging();
					this._ProjeID = value;
					this.SendPropertyChanged("ProjeID");
					this.OnProjeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ŞubeID", DbType="Int")]
		public System.Nullable<int> ŞubeID
		{
			get
			{
				return this._ŞubeID;
			}
			set
			{
				if ((this._ŞubeID != value))
				{
					if (this._Şube.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnŞubeIDChanging(value);
					this.SendPropertyChanging();
					this._ŞubeID = value;
					this.SendPropertyChanged("ŞubeID");
					this.OnŞubeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RehberlikID", DbType="Int")]
		public System.Nullable<int> RehberlikID
		{
			get
			{
				return this._RehberlikID;
			}
			set
			{
				if ((this._RehberlikID != value))
				{
					if (this._Rehberlik.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRehberlikIDChanging(value);
					this.SendPropertyChanging();
					this._RehberlikID = value;
					this.SendPropertyChanged("RehberlikID");
					this.OnRehberlikIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Çocuk_Veli", Storage="_Çocuk", ThisKey="ÇocukID", OtherKey="ÇocukID", IsForeignKey=true)]
		public Çocuk Çocuk
		{
			get
			{
				return this._Çocuk.Entity;
			}
			set
			{
				Çocuk previousValue = this._Çocuk.Entity;
				if (((previousValue != value) 
							|| (this._Çocuk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Çocuk.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Çocuk.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._ÇocukID = value.ÇocukID;
					}
					else
					{
						this._ÇocukID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Çocuk");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ödeme_Veli", Storage="_Ödeme", ThisKey="ÖdemeID", OtherKey="ÖdemeID", IsForeignKey=true)]
		public Ödeme Ödeme
		{
			get
			{
				return this._Ödeme.Entity;
			}
			set
			{
				Ödeme previousValue = this._Ödeme.Entity;
				if (((previousValue != value) 
							|| (this._Ödeme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ödeme.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Ödeme.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._ÖdemeID = value.ÖdemeID;
					}
					else
					{
						this._ÖdemeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ödeme");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proje_Veli", Storage="_Proje", ThisKey="ProjeID", OtherKey="ProjeID", IsForeignKey=true)]
		public Proje Proje
		{
			get
			{
				return this._Proje.Entity;
			}
			set
			{
				Proje previousValue = this._Proje.Entity;
				if (((previousValue != value) 
							|| (this._Proje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proje.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Proje.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._ProjeID = value.ProjeID;
					}
					else
					{
						this._ProjeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Proje");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rehberlik_Veli", Storage="_Rehberlik", ThisKey="RehberlikID", OtherKey="RehberlikID", IsForeignKey=true)]
		public Rehberlik Rehberlik
		{
			get
			{
				return this._Rehberlik.Entity;
			}
			set
			{
				Rehberlik previousValue = this._Rehberlik.Entity;
				if (((previousValue != value) 
							|| (this._Rehberlik.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rehberlik.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Rehberlik.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._RehberlikID = value.RehberlikID;
					}
					else
					{
						this._RehberlikID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Rehberlik");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Şube_Veli", Storage="_Şube", ThisKey="ŞubeID", OtherKey="ŞubeID", IsForeignKey=true)]
		public Şube Şube
		{
			get
			{
				return this._Şube.Entity;
			}
			set
			{
				Şube previousValue = this._Şube.Entity;
				if (((previousValue != value) 
							|| (this._Şube.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Şube.Entity = null;
						previousValue.Velis.Remove(this);
					}
					this._Şube.Entity = value;
					if ((value != null))
					{
						value.Velis.Add(this);
						this._ŞubeID = value.ŞubeID;
					}
					else
					{
						this._ŞubeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Şube");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
